# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-11-11T16:03:22+00:00

from fastapi import HTTPException, Request


class ValidateAuth:
    """Check if the request is authenticated."""

    def __init__(self, security: list[dict[str, list[str]]]):
        self.security = security

    async def __call__(self, request: Request):
        """Check if the request is authenticated.

        Args:
            request (Request): The request object.

        Raises:
            HTTPException: If the request is not authenticated.
        """
        scopes = self._compile_scopes(request.state.authn_method)
        try:
            await request.state.authn.validate_request(
                request, scopes, now=request.state.now
            )
        except Exception as e:
            raise HTTPException(status_code=401, detail=str(e))

    def _compile_scopes(self, method: str) -> list[str]:
        """Get all required scopes for this authentication method.

        Args:
            method (str): The authentication method.

        Returns:
            list[str]: A list of required scopes.
        """
        scopes = set[str]()
        for obj in self.security:
            scopes.update(obj.get(method, []))
        return list(scopes)
