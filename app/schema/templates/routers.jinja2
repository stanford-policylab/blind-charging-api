from __future__ import annotations

from fastapi import APIRouter, Request, Depends

from ..dependencies import *
from ..handlers import {{tag}}_handler
from ..auth import ValidateAuth

router = APIRouter(
    tags=['{{tag}}']
    )

{% for operation in operations %}
{% if operation.tags[0] == tag %}

{%- if operation.callbacks|length > 0 -%}
# Callbacks for {{ operation.function_name }}, supplied here for documentation.
# See https://fastapi.tiangolo.com/advanced/openapi-callbacks/
{% for key, cb_ops in operation.callbacks.items() -%}
_cb_router_{{operation.function_name}} = APIRouter()
{% for cb_op in cb_ops %}
@_cb_router_{{operation.function_name}}.{{cb_op.method}}('{{cb_op.path}}', response_model={{cb_op.response}})
def {{cb_op.function_name}}({{cb_op.snake_case_arguments}}) -> {{cb_op.return_type}}:
    {%- if cb_op.summary or cb_op.description %}
    """{{ cb_op.summary }}
    {%- if cb_op.description %}
    {{ "\n" }}
    {{- cb_op.description -}}
    {%- endif -%}
    """
    {% endif -%}
    pass
{% endfor -%}

{%- endfor -%}
{%- endif -%}

@router.{{operation.type}}('{{operation.path}}', response_model={{operation.response}}
    {% if operation.additional_responses %}
        , responses={
            {% for status_code, models in operation.additional_responses.items() %}
                '{{ status_code }}': {
                {% for key, model in models.items() %}
                    '{{ key }}': {{ model }}{% if not loop.last %},{% endif %}
                {% endfor %}
                }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    {% endif %}
    {% if operation.tags%}
    , tags={{operation.tags}}
    {% endif %}
    {% if operation.security %}
    , dependencies=[Depends(ValidateAuth({{ operation.security }}))]
    {% endif %}
    {% if operation.callbacks %}
    , callbacks=_cb_router_{{ operation.function_name }}.routes
    {% endif %})
async def {{operation.function_name}}(request: Request{%if operation.snake_case_arguments%}, {{operation.snake_case_arguments}}{%endif%}) -> {{operation.return_type}}:
    {%- if operation.summary or operation.description %}
    """{{ operation.summary }}
    {%- if operation.description %}
    {{ "\n" }}
    {{- operation.description -}}
    {%- endif -%}
    """
    {% endif -%}
    return await {{tag}}_handler.{{operation.function_name}}(**locals())
{% endif %}
{% endfor %}
