[tool.poetry]
name = "blind-charging-api"
version = "0.10.9"
description = "Race-blind Charging API"
authors = ["Joe Nudell <jnudell@hks.harvard.edu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "3.10.5"
fastapi = {extras = ["standard"], version = "^0.115.0"}
pyjwt = "^2.8.0"
pydantic = "^2.7.1"
sqlalchemy = "2.0.35"
pyodbc = "^5.1.0"
aioodbc = "^0.5.0"
python-glowplug = "0.3.10"
typer = "^0.12.3"
pydantic-settings = "^2.2.1"
uuid-utils = "0.9.0"
greenlet = "3.1.1"
gunicorn = "23.0.0"
uvicorn = "0.30.6"
jinja2 = "^3.1.4"
openai = "^1.30.1"
aiosqlite = "^0.20.0"
nameparser = "^1.1.3"
celery = "^5.4.0"
redis = "^5.2.1"
azure-storage-blob = "^12.20.0"
urllib3 = "2.2.3"
pytz = "2024.2"
flower = "^2.0.1"
argon2-cffi = "^23.1.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-api = "^1.27.0"
python-hcl2 = "^4.3.5"
alembic = "1.13.3"
fakeredis = "2.24.1"
azure-monitor-opentelemetry = "^1.6.4"
opentelemetry-instrumentation-celery = "^0.49b1"
bc2 = {git = "git@github.com:stanford-policylab/bc2.git"}
certifi = "^2024.12.14"
alligater = "^0.3.2"


[tool.poetry.group.dev.dependencies]
pytest = "8.3.3"
pre-commit = "^3.7.1"
fakeredis = "^2.23.3"
pytest-asyncio = "0.24.0"
celery = {extras = ["pytest"], version = "^5.4.0"}
responses = "^0.25.3"
alembic = "^1.13.2"
mypy = "^1.11.2"

[tool.ruff]
exclude = ["app/server/generated", "app/logo.py"]

[tool.ruff.lint]
select = ["F", "E", "W", "I001", "C", "W", "B"]

[tool.mypy]
strict = false # TODO: Set to true when we have time to fix all the errors
ignore_missing_imports = true
exclude = "^(alembic)"

[[tool.mypy.overrides]]
module = "app.server.generated.models"
ignore_errors = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
