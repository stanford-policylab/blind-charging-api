[tool.poetry]
name = "blind-charging-api"
version = "0.3.2"
description = ""
authors = ["Joe Nudell <jnudell@hks.harvard.edu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.9.5"
fastapi = "^0.111.0"
fastapi-sso = "^0.15.0"
pyjwt = "^2.8.0"
pydantic = "^2.7.1"
sqlalchemy = "^2.0.30"
pyodbc = "^5.1.0"
aioodbc = "^0.5.0"
python-glowplug = "^0.3.4"
typer = "^0.12.3"
pydantic-settings = "^2.2.1"
uuid-utils = "^0.7.0"
greenlet = "^3.0.3"
gunicorn = "^22.0.0"
uvicorn = "^0.29.0"
jinja2 = "^3.1.4"
openai = "^1.30.1"
aiosqlite = "^0.20.0"
alligater = {git = "git@github.com:stanford-policylab/alligater.git"}
bc2 = {git = "git@github.com:stanford-policylab/bc2.git"}
nameparser = "^1.1.3"
celery = "^5.4.0"
redis = "^5.0.7"
azure-storage-blob = "^12.20.0"
urllib3 = "^2.2.2"
pytz = "^2024.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pre-commit = "^3.7.1"
fakeredis = "^2.23.3"
pytest-asyncio = "^0.23.7"
celery = {extras = ["pytest"], version = "^5.4.0"}
responses = "^0.25.3"


[tool.ruff]
exclude = ["app/server/generated"]

[tool.ruff.lint]
select = ["F", "E", "W", "I001", "C", "W", "B"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
